# This workflow installs the latest version of Terraform CLI
# On pull request events, this workflow will run `terraform init`, `terraform fmt`, and `terraform plan`. 
# On push events to the "master" branch, `terraform apply` will be executed.

name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    env: 
      CONFIG_DIRECTORY: "./"
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    runs-on: ubuntu-latest


    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        # working-directory: ./

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account show

    # Install the latest version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: Terraform Format
     # run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

     # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
